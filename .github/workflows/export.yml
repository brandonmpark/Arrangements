name: MuseScore Export
on:
  push:
    paths:
      - '**/*.mscx'
      - '!**/Excerpts/**'
      - '!WIP/**'
jobs:
  export-scores:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Get changed files
      id: getfile
      run: |
        git fetch origin ${{ github.event.before }}:${{ github.event.before }}
        mscxfiles=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.mscx$' | grep -v '/Excerpts/' | tr '\n' ' ')
        printf 'MSCXFILES=%s\n' "$mscxfiles" >> $GITHUB_ENV
    - name: Install yq
      run: |
        sudo add-apt-repository ppa:rmescandon/yq
        sudo apt update
        sudo apt install yq -y
    - name: Install MuseScore
      run: |
        wget -q https://github.com/musescore/MuseScore/releases/download/v4.1.1/MuseScore-4.1.1.232071203-x86_64.AppImage
        chmod +x MuseScore-4.1.1.232071203-x86_64.AppImage
        ./MuseScore-4.1.1.232071203-x86_64.AppImage --appimage-extract

    - name: Export Scores
      run: |
        sudo apt-get install -y xvfb
        for file in ${{ env.MSCXFILES }}
        do
          # Extract project name and directory
          project_dir=$(dirname "$file")
          project_name=$(basename "$project_dir")

          # Remove old build files in the directory
          rm -rf "$project_dir/build"

          # Skip if parts.yaml doesn't exist in the directory
          if [ ! -f "$project_dir/parts.yaml" ]; then
            continue
          fi

          # Create directories and export PDFs for each part
          for category in $(yq e 'keys | .[]' "$project_dir/parts.yaml"); do
            mkdir -p "$project_dir/build/$category"
            for part in $(yq e '.["'$category'"][]' "$project_dir/parts.yaml"); do
              excerpt_file="$project_dir/Excerpts/${part}/${part}.mscx"
              if [ -f "$excerpt_file" ]; then
                xvfb-run -a ./squashfs-root/AppRun -o "$project_dir/build/$category/${part}.pdf" "$excerpt_file"
              fi
            done
          done
        done
    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add **/build/**/*.pdf
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add exported files"
          git remote set-url origin https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git
          git push
        fi